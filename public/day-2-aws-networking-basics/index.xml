<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS Networking basics on Amazon CloudOps Networking Workshop</title>
    <link>/day-2-aws-networking-basics.html</link>
    <description>Recent content in AWS Networking basics on Amazon CloudOps Networking Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/day-2-aws-networking-basics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Infrastructure</title>
      <link>/day-2-aws-networking-basics/aws-infrastructure.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-2-aws-networking-basics/aws-infrastructure.html</guid>
      <description>AWS currently has 24 regions in its global infrastructure. A region is a physical location around the world where data centers are clustered. These data centers are grouped in Availability Zones. Each AWS Region consists of multiple, isolated, and physically separate AZ&amp;rsquo;s within a geographic area. There are 77 Availability Zones.
AWS is responsible of protecting this infrastructure according to the Shared Responsibility Model:</description>
    </item>
    
    <item>
      <title>What is a VPC?</title>
      <link>/day-2-aws-networking-basics/whats-a-vpc.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-2-aws-networking-basics/whats-a-vpc.html</guid>
      <description>Amazon Virtual Private Cloud (Amazon VPC) allows you to provision resources, such as Amazon EC2 instances, into a virtual network. This virtual network is a logically isolated area within the AWS cloud that resembles a traditional network. Think about it as a private data center in the cloud.
The VPC is highly available as it spans all of the Availability Zones in the Region where you launch it. When you create a VPC, you provide a CIDR block that specifies the range of IP addresses for the VPC.</description>
    </item>
    
    <item>
      <title>Private/Public concepts</title>
      <link>/day-2-aws-networking-basics/privatepublic.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-2-aws-networking-basics/privatepublic.html</guid>
      <description>Resources launched inside a VPC will be assigned an IP address from the CIDR block assigned. For example, for a 10.0.0.0/16 CIDR block, an EC2 instance could have 10.0.0.42 as its IP address, depending on which subnet it lives in.
All IPs inside that VPC CIDR block are private : they only make sense inside that VPC and cannot be reached from the Internet or from any other network/VPC unless the routing has been setup accordingly.</description>
    </item>
    
    <item>
      <title>Security in a VPC</title>
      <link>/day-2-aws-networking-basics/security.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-2-aws-networking-basics/security.html</guid>
      <description>A security group is a virtual stateful firewall that controls inbound and outbound network traffic to AWS resources and Amazon EC2 instances. At AWS, security groups act like a built-in firewall for your virtual servers. With these security groups, you have full control about how accessible your instances are. At the most basic level, it is just another method to filter traffic to your instances. It provides you control about what traffic to allow or deny.</description>
    </item>
    
    <item>
      <title>Elastic Load Balancing</title>
      <link>/day-2-aws-networking-basics/load-balancing.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-2-aws-networking-basics/load-balancing.html</guid>
      <description>The main purpose of a load balancer is to balance the load of your traffic across several servers.
Load balancers in AWS are called elastic because they can dynamically adjust based on the load, and provide a lot more features than traditionally.
Elastic Load Balancing automatically adjusts to incoming traffic and network changes by distributing traffic across multiple Amazon EC2 instances in the cloud, without manual intervention. This enables you to achieve higher levels of fault tolerance with your applications.</description>
    </item>
    
    <item>
      <title>ELB LAB</title>
      <link>/day-2-aws-networking-basics/lab.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-2-aws-networking-basics/lab.html</guid>
      <description>In this lab, you will setup a VPC infrastructure with 4 subnets (2 private for the private servers, 2 public for the load balancer), 2 web servers and an Elastic Load Balancer to balance the web traffic between both servers.
Infrastructure setup: Create a VPC:
 Login to your AWS account Go to VPC Services and on the left panel, click on Your VPCs Click on Create VPC and give it a name (i.</description>
    </item>
    
    <item>
      <title>Route53</title>
      <link>/day-2-aws-networking-basics/route53.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-2-aws-networking-basics/route53.html</guid>
      <description>Amazon Route 53 is a Domain Name System (DNS) web service. Route 53 provides three main functions:
  Domain registration: Route 53 allows you to register a domain name for your website, such as example.com. This domain name can be used by the users to access your website.
  DNS service: an EC2 instance has an IP address assigned to it (i.e. 10.0.0.42). In order to connect to it, you would need to remember the whole IP address.</description>
    </item>
    
  </channel>
</rss>
