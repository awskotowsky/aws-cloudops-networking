<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AWS Advanced Networking on Amazon CloudOps Networking Workshop</title>
    <link>/day-3-aws-advanced-networking.html</link>
    <description>Recent content in AWS Advanced Networking on Amazon CloudOps Networking Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/day-3-aws-advanced-networking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hybrid Connectivity</title>
      <link>/day-3-aws-advanced-networking/hybrid-cloud.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-3-aws-advanced-networking/hybrid-cloud.html</guid>
      <description>AWS allows you to integrate your on-premise network with your cloud environment, either:
 by using a Direct Connect connection (DX) by using a Virtual Private Network (VPN)  They can both be used for this purpose but are chosen based on different needs.
A VPN is an encrypted tunnel going over the Internet. There are two types of VPN in AWS:
 Site-to-Site VPN : this one is used between different sites, such as an on-premise network and the cloud, and uses IPsec type of VPN.</description>
    </item>
    
    <item>
      <title>VPC Peering</title>
      <link>/day-3-aws-advanced-networking/vpc-peering.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-3-aws-advanced-networking/vpc-peering.html</guid>
      <description>A company may have multiple VPCs. For example, there could be a VPC for the finance department and another VPC for the legal department. The finance department may want to access resources in the legal department, and vice versa. In that case, yu will need a VPC peering connection.
A VPC peering connection is a networking connection between two VPCs that allows you to route traffic between them. Instances from one VPC can communicate with instances from the other VPC as if they are within the same network.</description>
    </item>
    
    <item>
      <title>VPC Peering LAB</title>
      <link>/day-3-aws-advanced-networking/lab.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-3-aws-advanced-networking/lab.html</guid>
      <description>In this lab, you will create a VPC Peering connection between 2 VPCs and allow their resources to communicate across.
For that, you will need to launch 2 VPCs and a VPC peering connection, and to launch EC2 instances in each VPC with private connectivity between instances.
Create a VPC 1:
 Login to your AWS account Go to VPC Services and on the left panel, click on Your VPCs Click on Create VPC and give it a name (i.</description>
    </item>
    
    <item>
      <title>Transit Gateway</title>
      <link>/day-3-aws-advanced-networking/transit-gateway.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-3-aws-advanced-networking/transit-gateway.html</guid>
      <description>VPC peering connections can become complicated when there are too many VPCs trying to communicate, the configuration and management becomes heavy (without also forgetting the VPC peering number limits). In which case, a good practice is to use a Transit Gateway to establish connectivity between the VPCs.
A Transit Gateway acts like a central router to centralize routing across the different networks such as VPCs and on-premise networks. This component works with VPCs, VPNs and Direct Connect connections.</description>
    </item>
    
    <item>
      <title>VPC Endpoints</title>
      <link>/day-3-aws-advanced-networking/vpc-endpoints.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/day-3-aws-advanced-networking/vpc-endpoints.html</guid>
      <description>As we previsouly mentioned in the Direct Connect section, AWS services are considered &amp;ldquo;public&amp;rdquo; services unless they&amp;rsquo;re setup in a VPC. This means that when an instance is trying to reach an AWS service (such as API Gateway, an S3 bucket, ..), the traffic is going out to the Internet because the service name resolves (DNS) to a public name/URL endpoint.
This situation therefore requires Internet access, therefore an Internet Gateway.</description>
    </item>
    
  </channel>
</rss>
